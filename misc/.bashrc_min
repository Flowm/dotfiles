#############################################################################
#
# If not running interactively, don't do anything
if [ -n "$PS1" ]; then

#############################################################################
# Host detection
#
OS=`uname`
HOST=`uname -n`
PLATFORM=`uname -m`
color_prompt=yes

#############################################################################
# General
#
# Activate bash_completion
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
	. /etc/bash_completion
fi

# Add $HOME/bin and all subdirs to the path
if [ -d "$HOME/bin" ]; then
	PATH="$HOME/bin:$PATH"
	for d in $(ls -d $HOME/bin/*/ 2>/dev/null); do
		PATH="${d%%/}:$PATH"
	done
fi

#############################################################################
# History
#
HISTCONTROL=ignoredups:ignorespace

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=10000
HISTFILESIZE=500000
#unset HISTSIZE
#unset HISTFILESIZE


export HISTTIMEFORMAT="%s "
PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND ; }"'echo $HOST $$ $USER \
	"$(history 1)" >> ~/.bash_eternal_history'

#############################################################################
# Behaviour
#
# VI mode
set -o vi

# ^p check for partial match in history
bind -m vi-insert "\C-p":dynamic-complete-history

# ^n cycle through the list of partial matches
bind -m vi-insert "\C-n":menu-complete

# ^l clear screen
bind -m vi-insert "\C-l":clear-screen
bind -m vi-command "\C-l":clear-screen

#############################################################################
# Screen
#
# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# Make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# Git
export MANPATH=/usr/local/git/man:$MANPATH
function parse_git_branch {
	git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1) /'
}

if [ -n "$color_prompt" ]; then
	if [ -x /usr/bin/tput ]; then #&& tput setaf 1 >&/dev/null; then
		# We have color support; assume it's compliant with Ecma-48
		#Set some colors
		BLACK="\[\033[0;30m\]"
		RED="\[\033[0;31m\]"
		GREEN="\[\033[0;32m\]"
		BROWN="\[\033[0;33m\]"
		BLUE="\[\033[0;34m\]"
		MAGENTA="\[\033[0;35m\]"
		CYAN="\[\033[0;36m\]"
		WHITE="\[\033[0;37m\]"
		#LIGHT
		LBLACK="\[\033[1;30m\]"
		LRED="\[\033[1;31m\]"
		LGREEN="\[\033[1;32m\]"
		LYELLOW="\[\033[1;33m\]"
		LBLUE="\[\033[1;34m\]"
		LMAGENTA="\[\033[1;35m\]"
		LCYAN="\[\033[1;36m\]"
		LWHITE="\[\033[1;37m\]"
		NOCOLOR="\[\033[0m\]"
		#Set the promt
		PS1="${LRED}\u${NOCOLOR}@${LGREEN}\h${NOCOLOR}: ${LBLUE}\w${NOCOLOR} \$(parse_git_branch)\$ "
	else
		PS1='\u@\h:\w\$ '
	fi
else
	if [ -z "$no_prompt" ]; then
		PS1='\u@\h:\w\$ '
	fi
fi

# Enable color support of ls and also add handy aliases
if ([ -n "$color_prompt" ] && [ -x /usr/bin/dircolors ]); then
	test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
	alias ls='ls --color=auto'
	alias dir='dir --color=auto'
	alias vdir='vdir --color=auto'

	alias grep='grep --color=auto'
	alias fgrep='fgrep --color=auto'
	alias egrep='egrep --color=auto'
fi

# Improved window titles
case "$TERM" in
	xterm*|rxvt*)
		PS1="\[\e]0;\u@\h: \w\a\]$PS1"
		export TERM=xterm-256color
		;;
	*)
		;;
esac


#############################################################################
# Aliases - General
#

export EDITOR=vim

# Some more ls aliases
alias ll='ls -Al'
alias la='ls -alF'
alias l='ls -1F'
alias tree='tree -Csu | less -R'

# Directory navigation
alias cd..='cd ..'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'

# apt-get Shortcuts
alias apt-up='sudo apt-get update'
alias apt-diup='sudo apt-get update && sudo apt-get upgrade'

alias g='git'
alias v='vim'
alias vless='/usr/share/vim/vim74/macros/less.sh'

# Some nice little scripts
alias ping88='ping 8.8.8.8'
alias httptest='wget cachefly.cachefly.net/100mb.test -O /dev/null'

# Directory sorting only in gnu ls
alias ll='ls -alF --group-directories-first'

#############################################################################
# Aliases - Torrents
#

lnkf() {
	for file in "$@"; do
		ln -s "`realpath \"$file\"`" ~/download/fm/;
	done
}
lnkm() {
	for file in "$@"; do
		ln -s "`realpath \"$file\"`" ~/download/mf/;
	done
}
lnks() {
	for file in "$@"; do
		ln -s "`realpath \"$file\"`" ~/download/sm/;
	done
}
lnkv() {
	for file in "$@"; do
		ln -s "`realpath \"$file\"`" ~/download/vd/;
	done
}

#############################################################################
# Non interactive shells
fi
